{"version":3,"sources":["webpack:///src/app/common/services/super-user.service.ts","webpack:///src/app/modules/super-user/components/Transactions/transactions.component.ts","webpack:///src/app/modules/super-user/components/Transactions/transactions.component.html","webpack:///src/app/modules/super-user/components/logs/request-log.component.ts","webpack:///src/app/modules/super-user/components/logs/request-log.component.html","webpack:///src/app/modules/super-user/components/super-user-root/super-user-root.component.ts","webpack:///src/app/modules/super-user/components/super-user-root/super-user-root.component.html","webpack:///src/app/modules/super-user/components/users-list/user-edit-dialog/user-edit-dialog.component.ts","webpack:///src/app/modules/super-user/components/users-list/user-edit-dialog/user-edit-dialog.component.html","webpack:///src/app/modules/super-user/components/users-list/users-list.component.ts","webpack:///src/app/modules/super-user/components/users-list/users-list.component.html","webpack:///src/app/modules/super-user/sidenav/supersidenav.component.ts","webpack:///src/app/modules/super-user/sidenav/supersidenav.component.html","webpack:///src/app/modules/super-user/super-dashboard/super-dashboard.component.ts","webpack:///src/app/modules/super-user/super-dashboard/super-dashboard.component.html","webpack:///src/app/modules/super-user/super-user.module.ts"],"names":["SuperUserService","http","superUrl","get","id","status","patch","providedIn","TransactionsComponent","superService","dialog","dataSource","Transaction_LIST_DATA","displayedColumns","getOrderTransactions","subscribe","res","data","paginator","sort","error","console","log","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","selector","templateUrl","styleUrls","RequestLogComponent","REQUEST_LOG","getRequestLogs","SuperUserRootComponent","breakpointObserver","cards","observe","Handset","pipe","matches","title","cols","rows","UserEditDialogComponent","formBuilder","changeStatusForm","group","userStatus","required","changeUserStatus","onChangeStatus","UsersListComponent","USERS_LIST_DATA","getUserAccount","userData","dialogRef","open","afterClosed","result","map","item","_id","active","SuperSidenavComponent","SuperDashboardComponent","authService","router","getMe","userProfile","firstname","lastname","picture","logout","navigate","onLogout","SuperUserModule","forChild","path","component","children","declarations","imports","exports"],"mappings":"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","file":"modules-super-user-super-user-module-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SuperUserService {\n  private superUrl = \"http://localhost:8080/api/v1/farmermarket/super\";\n  constructor(private http: HttpClient) {}\n\n  getUserAccount() {\n    return this.http.get(`${this.superUrl}/users`);\n  }\n\n  changeUserStatus(id: string, status: boolean) {\n    return this.http.patch(`${this.superUrl}/users/${id}`, { status });\n  }\n\n  getRequestLogs() {\n    return this.http.get(`${this.superUrl}/logs`);\n  }\n  getOrderTransactions() {\n    return this.http.get(`${this.superUrl}/transactions`);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { UsersList } from \"../../../../common/_models/user\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { OrderTransactions } from \"src/app/common/_models/superUser\";\n@Component({\n  selector: \"app-transactions\",\n  templateUrl: \"./transactions.component.html\",\n  styleUrls: [\"./transactions.component.css\"],\n})\nexport class TransactionsComponent implements OnInit {\n  Transaction_LIST_DATA: OrderTransactions[];\n  dataSource = new MatTableDataSource<OrderTransactions>(\n    this.Transaction_LIST_DATA\n  );\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n\n  displayedColumns: string[] = [\n    \"order_number\",\n    \"quantity\",\n    \"totalprice\",\n    \"status\",\n    \"date\",\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.superService.getOrderTransactions().subscribe(\n      (res: ApiResponse) => {\n        this.Transaction_LIST_DATA = res.data;\n        this.dataSource = new MatTableDataSource<OrderTransactions>(\n          this.Transaction_LIST_DATA\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // console.log(this.USERS_LIST_DATA);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<div class=\"userlist-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. July 28\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- Order number Column -->\n    <ng-container matColumnDef=\"order_number\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Order #</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element._id }}</td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.quantity }}\n      </td>\n    </ng-container>\n\n    <!-- price Column -->\n    <ng-container matColumnDef=\"totalprice\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Totalprice</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.totalprice }}\n      </td>\n    </ng-container>\n\n    <!-- status Column -->\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.status }}</td>\n    </ng-container>\n    <!-- email Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date of order</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.orderedAt | date }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { RequestLogs } from \"src/app/common/_models/superUser\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatSort } from \"@angular/material/sort\";\n\n@Component({\n  selector: \"super-request-log\",\n  templateUrl: \"./request-log.component.html\",\n  styleUrls: [\"./request-log.component.css\"],\n})\nexport class RequestLogComponent implements OnInit {\n  REQUEST_LOG: RequestLogs[];\n  dataSource = new MatTableDataSource<RequestLogs>(this.REQUEST_LOG);\n  displayedColumns: string[] = [\n    \"url\",\n    \"method\",\n    \"response_time\",\n    \"request_date\",\n  ];\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit(): void {\n    this.superService.getRequestLogs().subscribe(\n      (res: ApiResponse) => {\n        this.REQUEST_LOG = res.data;\n        this.dataSource = new MatTableDataSource<RequestLogs>(this.REQUEST_LOG);\n\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<div class=\"log-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. GET\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- method Column -->\n    <ng-container matColumnDef=\"method\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Method</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.method }}</td>\n    </ng-container>\n\n    <!-- url Column -->\n    <ng-container matColumnDef=\"url\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Url</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.url }}</td>\n    </ng-container>\n\n    <!-- Response Time Column -->\n    <ng-container matColumnDef=\"response_time\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Response Time</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.response_time }}</td>\n    </ng-container>\n\n    <!-- Request Date Column -->\n    <ng-container matColumnDef=\"request_date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Request Date</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.request_date | date: \"medium\" }}\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20, 30, REQUEST_LOG?.length]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-super-user-root\",\n  templateUrl: \"./super-user-root.component.html\",\n  styleUrls: [\"./super-user-root.component.css\"],\n})\nexport class SuperUserRootComponent implements OnInit {\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  ngOnInit(): void {}\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          // bg_icon_name mat icon names    //classname css reference\n          {\n            title: \"Users\",\n            cols: 4,\n            rows: 3,\n          },\n          {\n            title: \"Transactions\",\n            cols: 4,\n            rows: 3,\n          },\n          {\n            title: \"Requests Log\",\n            cols: 4,\n            rows: 3,\n          },\n        ];\n      }\n\n      return [\n        {\n          title: \"Users\",\n          cols: 2,\n          rows: 3,\n        },\n        {\n          title: \"Transactions\",\n          cols: 2,\n          rows: 3,\n        },\n        {\n          title: \"Requests Log\",\n          cols: 4,\n          rows: 3,\n        },\n      ];\n    })\n  );\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"4\" rowHeight=\"175px\">\n    <mat-grid-tile\n      *ngFor=\"let card of cards | async\"\n      [colspan]=\"card.cols\"\n      [rowspan]=\"card.rows\"\n    >\n      <mat-card [ngClass]=\"['dashboard-card']\">\n        <mat-card-header>\n          <mat-card-title>\n            {{ card.title }}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <super-users-list *ngIf=\"card.title == 'Users'\"></super-users-list>\n          <app-transactions\n            *ngIf=\"card.title == 'Transactions'\"\n          ></app-transactions>\n          <super-request-log *ngIf=\"card.title == 'Requests Log'\">\n          </super-request-log>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\n\n@Component({\n  selector: \"app-user-edit-dialog\",\n  templateUrl: \"./user-edit-dialog.component.html\",\n  styleUrls: [\"./user-edit-dialog.component.css\"],\n})\nexport class UserEditDialogComponent implements OnInit {\n  changeStatusForm: FormGroup;\n\n  constructor(\n    formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private superService: SuperUserService\n  ) {\n    this.changeStatusForm = formBuilder.group({\n      userStatus: [this.data[\"active\"], Validators.required],\n    });\n  }\n  onChangeStatus() {\n    this.superService\n      .changeUserStatus(\n        this.data[\"_id\"],\n        this.changeStatusForm.value.userStatus\n      )\n      .subscribe(\n        (data) => {\n          console.log(data);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"edit-user-dialog-container\">\n  <h2 mat-dialog-title>Edit User Status</h2>\n  <mat-dialog-content class=\"mat-typography\">\n    <h3>User information</h3>\n\n    <form [formGroup]=\"changeStatusForm\" ngNativeValidate>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Full name </mat-label>\n          <input matInput disabled value=\"{{ data.firstname }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Email</mat-label>\n          <input matInput disabled value=\"{{ data.email }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Role</mat-label>\n          <input matInput disabled value=\"{{ data.role }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-label>Status</mat-label>\n        <mat-slide-toggle formControlName=\"userStatus\"></mat-slide-toggle>\n      </p>\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button [mat-dialog-close]=\"'close'\">Cancel</button>\n    <button\n      mat-button\n      [mat-dialog-close]=\"this.changeStatusForm.get('userStatus').value\"\n      color=\"primary\"\n      (click)=\"onChangeStatus()\"\n      cdkFocusInitial\n    >\n      Update\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { UsersList } from \"../../../../common/_models/user\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserEditDialogComponent } from \"./user-edit-dialog/user-edit-dialog.component\";\nimport { MatSort } from \"@angular/material/sort\";\n\n@Component({\n  selector: \"super-users-list\",\n  templateUrl: \"./users-list.component.html\",\n  styleUrls: [\"./users-list.component.css\"],\n})\nexport class UsersListComponent implements OnInit {\n  USERS_LIST_DATA: UsersList[];\n  dataSource = new MatTableDataSource<UsersList>(this.USERS_LIST_DATA);\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n\n  displayedColumns: string[] = [\n    \"firstname\",\n    \"lastname\",\n    \"email\",\n    \"role\",\n    \"status\",\n    \"changestatus\",\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.superService.getUserAccount().subscribe(\n      (res: ApiResponse) => {\n        this.USERS_LIST_DATA = res.data;\n        this.dataSource = new MatTableDataSource<UsersList>(\n          this.USERS_LIST_DATA\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // console.log(this.USERS_LIST_DATA);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  openUserEditDialog(userData) {\n    const dialogRef = this.dialog.open(UserEditDialogComponent, {\n      data: userData,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result != \"close\") {\n        this.USERS_LIST_DATA = this.USERS_LIST_DATA.map((item) => {\n          if (item[\"_id\"] == userData._id) {\n            return { ...item, active: result };\n          }\n          return item;\n        });\n\n        this.dataSource = new MatTableDataSource<UsersList>(\n          this.USERS_LIST_DATA\n        );\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n      }\n    });\n  }\n}\n","<div class=\"userlist-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. Abebe Bikila\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- Firstname Column -->\n    <ng-container matColumnDef=\"firstname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Firstname</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.firstname }}</td>\n    </ng-container>\n\n    <!-- lastname Column -->\n    <ng-container matColumnDef=\"lastname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Lastname</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.lastname }}</td>\n    </ng-container>\n\n    <!-- email Column -->\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n\n    <!-- role Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.role }}</td>\n    </ng-container>\n    <!-- status Column -->\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.active ? \"active\" : \"deactive\" }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"changestatus\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-mini-fab\n          color=\"warn\"\n          aria-label=\"Example icon button with a menu icon\"\n          (click)=\"openUserEditDialog(element)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { UserProfile } from \"src/app/common/_models/user\";\n\n@Component({\n  selector: \"super-sidenav\",\n  templateUrl: \"./supersidenav.component.html\",\n  styleUrls: [\"./supersidenav.component.css\"],\n})\nexport class SuperSidenavComponent implements OnInit {\n  @Input() profile: UserProfile;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"sidenav-container\">\n  <div class=\"sidenav-logo\">\n    <h1>Farmer Market</h1>\n  </div>\n\n  <div class=\"sidenav-user\">\n    <div>\n      <img\n        src=\"https://cdn4.iconfinder.com/data/icons/flatfaces-everyday-people-circular/125/flatfaces8-512.png\"\n        alt=\"\"\n        srcset=\"\"\n        class=\"sidenav-user-img\"\n      />\n    </div>\n\n    <div class=\"sidenav-user-detail\">\n      <div class=\"sidenav-user-detail-name\">\n        {{ profile?.firstname }} {{ profile?.lastname }}\n      </div>\n      <div class=\"sidenav-user-detail-role\">Super user</div>\n    </div>\n  </div>\n\n  <mat-nav-list class=\"sidenav-menu-list\">\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\">\n      Users\n    </a>\n    <a mat-list-item [routerLink]=\"['/products']\" class=\"sidenav-menu-list-link\"\n      >Transactions</a\n    >\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\">Logs</a>\n  </mat-nav-list>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UserProfile } from \"src/app/common/_models/user\";\nimport { AuthService } from \"src/app/common/services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-super-dashboard\",\n  templateUrl: \"./super-dashboard.component.html\",\n  styleUrls: [\"./super-dashboard.component.css\"],\n})\nexport class SuperDashboardComponent implements OnInit {\n  userProfile: UserProfile;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.getMe().subscribe(\n      (res: any) => {\n        this.userProfile = res.data;\n      },\n      (error) => {\n        console.log(error.error);\n        this.userProfile = { firstname: \"\", lastname: \"\", picture: \"url\" };\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","<body>\n  <mat-drawer-container class=\"dashboard-container\">\n    <!-- sid nav -->\n    <mat-drawer\n      #drawer\n      mode=\"side\"\n      opened\n      class=\"dashboard-drawer\"\n      role=\"navigation\"\n    >\n      <mat-nav-list>\n        <super-sidenav [profile]=\"userProfile\"></super-sidenav>\n      </mat-nav-list>\n    </mat-drawer>\n    <!-- sid nav -->\n    <mat-drawer-content>\n      <!-- navbar -->\n      <div>\n        <mat-toolbar class=\"navbar\">\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Example icon-button with menu icon\"\n          >\n            <mat-icon (click)=\"drawer.toggle()\">menu</mat-icon>\n          </button>\n          <span>\n            <a mat-list-item [routerLink]=\"['/']\" class=\"menu-tab-list\">\n              Farmer Market\n            </a>\n          </span>\n          <span class=\"navbar-spacer\"></span>\n          <button\n            mat-icon-button\n            class=\"navbar-link mail_outline\"\n            aria-label=\"emails\"\n            matBadge=\"3\"\n            matBadgePosition=\"before\"\n          >\n            <mat-icon>mail_outline</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            class=\"navbar-link notifications_none\"\n            aria-label=\"orders notifications\"\n            matBadge=\"8\"\n            matBadgePosition=\"before\"\n            matBadgeColor=\"warn\"\n          >\n            <mat-icon>notifications_none</mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Account activity\"\n            [matMenuTriggerFor]=\"menu\"\n          >\n            <mat-icon mat-card-avatar class=\"navbar-user-image\"></mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogout()\">Logout</button>\n            <button mat-menu-item>\"\"</button>\n          </mat-menu>\n        </mat-toolbar>\n      </div>\n      <!-- navbar -->\n\n      <router-outlet></router-outlet>\n      <!-- router-outlet -->\n    </mat-drawer-content>\n  </mat-drawer-container>\n</body>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\nimport { SuperSidenavComponent } from \"./sidenav/supersidenav.component\";\nimport { SuperDashboardComponent } from \"./super-dashboard/super-dashboard.component\";\nimport { SuperUserRootComponent } from \"./components/super-user-root/super-user-root.component\";\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserEditDialogComponent } from './components/users-list/user-edit-dialog/user-edit-dialog.component';\nimport { RequestLogComponent } from './components/logs/request-log.component';\nimport { TransactionsComponent } from './components/Transactions/transactions.component';\n\n@NgModule({\n  declarations: [\n    SuperDashboardComponent,\n    SuperSidenavComponent,\n    SuperUserRootComponent,\n    UsersListComponent,\n    UserEditDialogComponent,\n    RequestLogComponent,\n    TransactionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: \"\",\n        component: SuperDashboardComponent,\n        children: [{ path: \"\", component: SuperUserRootComponent }],\n      },\n    ]),\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports: [SuperDashboardComponent],\n})\nexport class SuperUserModule {}\n"]}