{"version":3,"sources":["./src/app/common/services/farmer.service.ts","./src/app/modules/farmer-module/components/UI/home-dashboard/home-dashboard.component.ts","./src/app/modules/farmer-module/components/UI/home-dashboard/home-dashboard.component.html","./src/app/modules/farmer-module/components/UI/home-dashboard/orders/order-table.component.ts","./src/app/modules/farmer-module/components/UI/home-dashboard/orders/order-table.component.html","./src/app/modules/farmer-module/components/UI/home-dashboard/product/add-product-dialog/add-product-dialog.component.ts","./src/app/modules/farmer-module/components/UI/home-dashboard/product/add-product-dialog/add-product-dialog.component.html","./src/app/modules/farmer-module/components/UI/home-dashboard/product/product-table/products-table.component.ts","./src/app/modules/farmer-module/components/UI/home-dashboard/product/product-table/products-table.component.html","./src/app/modules/farmer-module/components/UI/orders/order-detail/detail.component.ts","./src/app/modules/farmer-module/components/UI/orders/order-detail/detail.component.html","./src/app/modules/farmer-module/components/UI/orders/order-list.component.ts","./src/app/modules/farmer-module/components/UI/orders/order-list.component.html","./src/app/modules/farmer-module/components/UI/products/products-list.component.ts","./src/app/modules/farmer-module/components/UI/products/products-list.component.html","./src/app/modules/farmer-module/components/UI/sidenav/sidenav.component.ts","./src/app/modules/farmer-module/components/UI/sidenav/sidenav.component.html","./src/app/modules/farmer-module/components/dashboard.component.ts","./src/app/modules/farmer-module/components/dashboard.component.html","./src/app/modules/farmer-module/farmerdashboard.module.ts"],"names":[],"mappings":"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","file":"modules-farmer-module-farmerdashboard-module-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\nimport { Product } from \"../_models/products\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FarmerService {\n  private farmerUrl = \"http://localhost:8080/api/v1/farmermarket/farmers\";\n  constructor(private http: HttpClient) {}\n\n  getProducts() {\n    return this.http.get(`${this.farmerUrl}/products`).pipe(\n      map((products) => {\n        return products;\n      }),\n      catchError((err) => {\n        // console.log(\"error caught in service\");\n        // console.error(err);\n        //Handle the error here\n        return throwError(err); //Rethrow it back to component\n      })\n    );\n  }\n\n  addProduct(product) {\n    return this.http.post(`${this.farmerUrl}/products`, product);\n  }\n\n  getOrders() {\n    return this.http.get(`${this.farmerUrl}/orders`).pipe(\n      map((orders) => {\n        return orders;\n      }),\n      catchError((err) => {\n        // console.log(\"error caught in service\");\n        // console.error(err);\n        //Handle the error here\n        return throwError(err); //Rethrow it back to component\n      })\n    );\n  }\n  updateOrders(ordernumber: string, status: string) {\n    return this.http\n      .patch(`${this.farmerUrl}/orders/${ordernumber}`, { status })\n      .pipe(\n        map((data) => {\n          return data;\n        }),\n        catchError((err) => {\n          // console.log(\"error caught in service\");\n          // console.error(err);\n          //Handle the error here\n          return throwError(err); //Rethrow it back to component\n        })\n      );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { map } from \"rxjs/operators\";\nimport { Breakpoints, BreakpointObserver } from \"@angular/cdk/layout\";\n\n@Component({\n  selector: \"app-home-dashboard\",\n  templateUrl: \"./home-dashboard.component.html\",\n  styleUrls: [\"./home-dashboard.component.css\"],\n})\nexport class HomeDashboardComponent implements OnInit {\n  constructor(private breakpointObserver: BreakpointObserver) {}\n  ngOnInit() {}\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          // bg_icon_name mat icon names    //classname css reference\n          {\n            title: \"New Orders\",\n            classname: \"new-orders\",\n            bg_icon_name: \"local_shipping\",\n            cols: 4,\n            rows: 1,\n          },\n          {\n            title: \"Earnings\",\n            classname: \"total-earnings\",\n            bg_icon_name: \"monetization_on\",\n            cols: 4,\n            rows: 1,\n          },\n          {\n            title: \"Orders\",\n            classname: \"total-orders\",\n            bg_icon_name: \"account_balance\",\n            cols: 4,\n            rows: 1,\n          },\n          {\n            title: \"Returns\",\n            classname: \"returns\",\n            bg_icon_name: \"backspace\",\n            cols: 4,\n            rows: 1,\n          },\n          {\n            title: \"Orders List\",\n            classname: \"\",\n            bg_icon_name: \"local_shipping\",\n            cols: 4,\n            rows: 3,\n          },\n          {\n            title: \"Profile\",\n            classname: \"\",\n            bg_icon_name: \"account_circle\",\n            cols: 4,\n            rows: 1,\n          },\n          {\n            title: \"Product Inventory\",\n            classname: \"\",\n            bg_icon_name: \"add_shopping_cart\",\n            cols: 4,\n            rows: 3,\n          },\n        ];\n      }\n\n      return [\n        {\n          title: \"New Orders\",\n          classname: \"new-orders\",\n          bg_icon_name: \"local_shipping\",\n          cols: 1,\n          rows: 1,\n        }, //classname css reference  // bg_icon_name mat icon names    //classname css reference\n        {\n          title: \"Earnings\",\n          classname: \"total-earnings\",\n          bg_icon_name: \"monetization_on\",\n          cols: 1,\n          rows: 1,\n        },\n        {\n          title: \"Orders\",\n          classname: \"total-orders\",\n          bg_icon_name: \"account_balance\",\n          cols: 1,\n          rows: 1,\n        },\n        {\n          title: \"Returns\",\n          classname: \"returns\",\n          bg_icon_name: \"backspace\",\n          cols: 1,\n          rows: 1,\n        },\n        {\n          title: \"Orders List\",\n          classname: \"\",\n          bg_icon_name: \"local_shipping\",\n          cols: 3,\n          rows: 3,\n        },\n        {\n          title: \"Profile\",\n          classname: \"\",\n          bg_icon_name: \"account_circle\",\n          cols: 1,\n          rows: 3,\n        },\n        {\n          title: \"Product Inventory\",\n          classname: \"\",\n          bg_icon_name: \"add_shopping_cart\",\n          cols: 4,\n          rows: 3,\n        },\n      ];\n    })\n  );\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"4\" rowHeight=\"175px\">\n    <mat-grid-tile\n      *ngFor=\"let card of cards | async\"\n      [colspan]=\"card.cols\"\n      [rowspan]=\"card.rows\"\n    >\n      <mat-card [ngClass]=\"['dashboard-card', card.classname]\">\n        <mat-card-header>\n          <mat-card-title>\n            {{ card.title }}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <mat-icon class=\"new-orders-bg-img\">{{ card.bg_icon_name }}</mat-icon>\n\n          <div *ngIf=\"card.title == 'New Orders'\">\n            20 new orders\n            <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n          </div>\n          <div *ngIf=\"card.title == 'Earnings'\">\n            $100 total earnings\n            <mat-progress-bar mode=\"determinate\" value=\"70\"></mat-progress-bar>\n          </div>\n          <div *ngIf=\"card.title == 'Orders'\">\n            200 orders so far\n          </div>\n          <div *ngIf=\"card.title == 'Returns'\">\n            2 Returns\n            <mat-progress-bar\n              mode=\"determinate\"\n              value=\"10\"\n              color=\"warn\"\n            ></mat-progress-bar>\n          </div>\n\n          <!-- order list table card  -->\n          <div *ngIf=\"card.title == 'Orders List'\">\n            <orders-table></orders-table>\n          </div>\n          <!-- order list table card  -->\n\n          <!-- order list table card  -->\n          <div *ngIf=\"card.title == 'Product Inventory'\">\n            <app-products-table></app-products-table>\n          </div>\n          <!-- order list table card  -->\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\n\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Sort } from \"@angular/material/sort\";\nimport { Orders, ApiResponse } from \"src/app/common/_models/products\";\nimport { DetailComponent } from \"../../orders/order-detail/detail.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { FarmerService } from \"src/app/common/services/farmer.service\";\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"orders-table\",\n  templateUrl: \"./order-table.component.html\",\n  styleUrls: [\"./order-table.component.css\"],\n})\nexport class OrderTableComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"order_number\",\n    \"status\",\n    \"quantity\",\n    \"totalprice\",\n    \"detailaction\",\n  ];\n\n  dataSource = [];\n  sortedData: MatTableDataSource<Orders>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(public dialog: MatDialog, private farmerService: FarmerService) {\n    this.sortedData = new MatTableDataSource(this.dataSource);\n  }\n  ngOnInit() {\n    this.farmerService\n      .getOrders()\n      .pipe(first()) //pipe(first()) automatically unsubscribes from the observable after returning the first item\n      .subscribe(\n        (data: ApiResponse) => {\n          console.log(data);\n          this.dataSource = data.data;\n          this.sortedData = new MatTableDataSource(this.dataSource);\n          this.sortedData.paginator = this.paginator;\n        },\n        (error) => {\n          console.log(error.error);\n        }\n      );\n  }\n  sortData(sort: Sort) {\n    const data = this.dataSource.slice();\n    if (!sort.active || sort.direction === \"\") {\n      this.sortedData = new MatTableDataSource(data);\n      return;\n    }\n\n    const sorteddata = data.sort((a, b) => {\n      const isAsc = sort.direction === \"asc\";\n      switch (sort.active) {\n        case \"order_number\":\n          return compare(a._id, b._id, isAsc);\n        case \"totalprice\":\n          return compare(a.products.totalprice, b.products.totalprice, isAsc);\n        case \"quantity\":\n          return compare(a.products.quantity, b.products.quantity, isAsc);\n        case \"status\":\n          return compare(a.status, b.status, isAsc);\n        default:\n          return 0;\n      }\n    });\n    this.sortedData = new MatTableDataSource(sorteddata);\n    this.sortedData.paginator = this.paginator;\n  }\n\n  openOrderDetailDialog(order) {\n    const dialogRef = this.dialog.open(DetailComponent, {\n      data: order,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(result);\n      if (result != \"close\") {\n        this.dataSource = this.dataSource.map((item) => {\n          if (item[\"_id\"] == order._id) {\n            return { ...item, status: result };\n          }\n          return item;\n        });\n\n        this.sortedData = new MatTableDataSource(this.dataSource);\n        if (this.sortedData.paginator) {\n          this.sortedData.paginator.firstPage();\n        }\n      }\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    const filteredData = this.dataSource.filter((data) =>\n      data.status.toLowerCase().includes(filterValue.toLowerCase())\n    );\n\n    this.sortedData = new MatTableDataSource(filteredData);\n    this.sortedData.paginator = this.paginator;\n  }\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<div class=\"order-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. Abebe Bikila\"\n      #input\n    />\n  </mat-form-field>\n  <table\n    mat-table\n    [dataSource]=\"sortedData\"\n    matSort\n    (matSortChange)=\"sortData($event)\"\n  >\n    <!-- customer Name Column -->\n    <ng-container matColumnDef=\"order_number\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"order_number\">\n        Order No.\n      </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element._id }}</td>\n    </ng-container>\n\n    <!-- order_number Column -->\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"status\">\n        Status\n      </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.status }}</td>\n    </ng-container>\n\n    <!-- status Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"quantity\">\n        Quantity\n      </th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.quantity }}\n      </td>\n    </ng-container>\n\n    <!-- amount Column -->\n    <ng-container matColumnDef=\"totalprice\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"totalprice\">\n        Totalprice\n      </th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.totalprice }}\n      </td>\n    </ng-container>\n\n    <!--add course button -->\n    <ng-container matColumnDef=\"detailaction\">\n      <th mat-header-cell *matHeaderCellDef>\n        Details\n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button\n          mat-stroked-button\n          color=\"primary\"\n          (click)=\"openOrderDetailDialog(row)\"\n        >\n          Detail\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    showFirstLastButtons\n    [length]=\"20\"\n    [pageSize]=\"5\"\n  ></mat-paginator>\n  <!-- [pageSizeOptions]=\"[5, 10, 25, 100]\" -->\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { FarmerService } from \"src/app/common/services/farmer.service\";\n\n@Component({\n  selector: \"app-add-product-dialog\",\n  templateUrl: \"./add-product-dialog.component.html\",\n  styleUrls: [\"./add-product-dialog.component.css\"],\n})\nexport class AddProductDialogComponent implements OnInit {\n  addProductForm;\n  constructor(private fb: FormBuilder, private farmerService: FarmerService) {\n    this.addProductForm = fb.group({\n      name: [\"\", Validators.required],\n      price: [\"\", Validators.required],\n      quantity: [\"\", Validators.required],\n      photo: [\"\", [Validators.required, this.validFileExtensions]],\n      description: [\"\", Validators.required],\n    });\n  }\n\n  get photo() {\n    return this.addProductForm.get(\"photo\");\n  }\n  get name() {\n    return this.addProductForm.get(\"name\");\n  }\n\n  ngOnInit(): void {}\n  onAddProduct(productImageRef) {\n    const formData = new FormData();\n    formData.append(\n      \"image\",\n      productImageRef.files[0],\n      productImageRef.files[0][\"name\"]\n    );\n    formData.append(\"name\", this.addProductForm.value.name);\n    formData.append(\"price\", this.addProductForm.value.price);\n    formData.append(\"quantity\", this.addProductForm.value.quantity);\n \n    formData.append(\"description\", this.addProductForm.value.description);\n    this.farmerService.addProduct(formData).subscribe(\n      (data) => {\n        console.log(data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  validFileExtensions(control: FormControl) {\n    if (\n      control.value.endsWith(\".jpeg\") ||\n      control.value.endsWith(\".jpg\") ||\n      control.value.endsWith(\".png\")\n    ) {\n      return null;\n    }\n\n    return { invalid: true };\n  }\n}\n","<div class=\"add-product-dialog-container\">\n  <h2 mat-dialog-title>Add Product</h2>\n  <mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"addProductForm\">\n      <p>\n        <mat-form-field appearance=\"outline\" class=\"product-form-full-width\">\n          <mat-label>Name</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            placeholder=\"Ex. Avocado...\"\n            formControlName=\"name\"\n          />\n\n          <mat-hint>Add Product name</mat-hint>\n          <mat-error *ngIf=\"name.hasError('required')\">\n            Name is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"outline\" class=\"product-form-full-width\">\n          <mat-label>Price</mat-label>\n          <input\n            type=\"number\"\n            matInput\n            placeholder=\"Ex. $12\"\n            formControlName=\"price\"\n          />\n          <span matPrefix>$&nbsp;</span>\n          <span matSuffix>.00</span>\n          <mat-hint>Add Product price</mat-hint>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"outline\" class=\"product-form-full-width\">\n          <mat-label>Quantity</mat-label>\n          <input\n            type=\"number\"\n            matInput\n            placeholder=\"Ex. 20\"\n            formControlName=\"quantity\"\n          />\n\n          <mat-hint>Add Product quantity</mat-hint>\n        </mat-form-field>\n      </p>\n\n      <div class=\"product-form-full-width\">\n        <mat-label>Photo </mat-label>\n        <!-- <label for=\"uploadPicture\" class=\"upload-file\">\n          <mat-icon>add_a_photo</mat-icon>\n        </label> -->\n\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          [hidden]=\"true\"\n          #files\n          formControlName=\"photo\"\n        />\n        <mat-hint *ngIf=\"!files.files[0]\"> Add Product Photo </mat-hint>\n        <mat-hint *ngIf=\"files.files[0]\">{{ files.files[0][\"name\"] }}</mat-hint>\n        <button class=\"btn-addphoto\" mat-button (click)=\"files.click()\">\n          <mat-icon>add_a_photo</mat-icon>\n        </button>\n\n        <mat-error\n          *ngIf=\"photo.hasError('invalid') && !photo.hasError('required')\"\n        >\n          Please enter a valid Photo\n        </mat-error>\n        <!-- <mat-error *ngIf=\"photo.hasError('required')\">\n          Photo is <strong>required</strong>\n        </mat-error> -->\n      </div>\n\n      <p>\n        <mat-form-field appearance=\"outline\" class=\"product-form-full-width\">\n          <mat-label>Description</mat-label>\n\n          <textarea\n            matInput\n            placeholder=\"Ex. It is...\"\n            formControlName=\"description\"\n          ></textarea>\n          <mat-hint>Add Product description</mat-hint>\n        </mat-form-field>\n      </p>\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button\n      mat-button\n      color=\"primary\"\n      [mat-dialog-close]=\"true\"\n      (click)=\"onAddProduct(files)\"\n      [disabled]=\"!addProductForm.valid\"\n    >\n      Add Product\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  PeriodicElement,\n  Product,\n  ApiResponse,\n} from \"src/app/common/_models/products\";\nimport { Sort } from \"@angular/material/sort\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { AddProductDialogComponent } from \"../add-product-dialog/add-product-dialog.component\";\nimport { FarmerService } from \"src/app/common/services/farmer.service\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\n\n@Component({\n  selector: \"app-products-table\",\n  templateUrl: \"./products-table.component.html\",\n  styleUrls: [\"./products-table.component.css\"],\n})\nexport class ProductsTableComponent {\n  displayedColumns: string[] = [\n    \"photo\",\n    \"name\",\n    \"price\",\n    \"quantity\",\n    \"addproduct\",\n  ];\n  dataSource;\n  sortedData: MatTableDataSource<Product>;\n  constructor(public dialog: MatDialog, private farmerService: FarmerService) {\n    // this.sortedData = this.dataSource.slice();\n  }\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  ngOnInit(): void {\n    this.farmerService.getProducts().subscribe(\n      (res: ApiResponse) => {\n        this.dataSource = res.data;\n        this.sortedData = new MatTableDataSource(this.dataSource);\n        this.sortedData.paginator = this.paginator;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  addProductDialog() {\n    const dialogRef = this.dialog.open(AddProductDialogComponent);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  sortData(sort: Sort) {\n    const data = this.dataSource.slice();\n    if (!sort.active || sort.direction === \"\") {\n      this.sortedData = new MatTableDataSource(data);\n      return;\n    }\n\n    const sorteddata = data.sort((a, b) => {\n      const isAsc = sort.direction === \"asc\";\n      switch (sort.active) {\n        case \"name\":\n          return compare(a.name, b.name, isAsc);\n        case \"price\":\n          return compare(a.price, b.price, isAsc);\n        case \"quantity\":\n          return compare(a.quantity, b.quantity, isAsc);\n\n        default:\n          return 0;\n      }\n    });\n    this.sortedData = new MatTableDataSource(sorteddata);\n    this.sortedData.paginator = this.paginator;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    const filteredData = this.dataSource.filter((data) =>\n      data.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    this.sortedData = new MatTableDataSource(filteredData);\n    this.sortedData.paginator = this.paginator;\n  }\n}\nconst ELEMENT_DATA: Product[] = [];\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<div class=\"productlist-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. Abebe Bikila\"\n      #input\n    />\n  </mat-form-field>\n  <table\n    mat-table\n    [dataSource]=\"sortedData\"\n    matSort\n    (matSortChange)=\"sortData($event)\"\n  >\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"photo\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"position\">\n        photo\n      </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <img\n          alt=\"image\"\n          class=\"product-img\"\n          width=\"40\"\n          height=\"50\"\n          [src]=\"element.photo\"\n        />\n      </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"name\">\n        Name\n      </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"price\">Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"quantity\">\n        Quantity\n      </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n    </ng-container>\n\n    <!--add course button -->\n    <ng-container matColumnDef=\"addproduct\">\n      <th mat-header-cell *matHeaderCellDef>\n        <button\n          mat-mini-fab\n          color=\"primary\"\n          (click)=\"addProductDialog()\"\n          matTooltip=\"Add Product\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n      </th>\n      <td mat-cell *matCellDef=\"let row\"></td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    showFirstLastButtons\n    [pageSizeOptions]=\"[5, 8]\"\n  ></mat-paginator>\n  <!-- [pageSizeOptions]=\"[5, 10, 25, 100]\" -->\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Orders, ApiResponse } from \"src/app/common/_models/products\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { FarmerService } from \"src/app/common/services/farmer.service\";\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-detail\",\n  templateUrl: \"./detail.component.html\",\n  styleUrls: [\"./detail.component.css\"],\n})\nexport class DetailComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: Orders,\n    private farmerService: FarmerService\n  ) {}\n  orderStatus = [\n    { value: \"ready\", viewValue: \"Ready\" },\n    { value: \"complete\", viewValue: \"Completed\" },\n  ];\n  statusUpdateControl = new FormControl(\"\", Validators.required);\n  ngOnInit(): void {}\n  updateOrderStatus() {\n    this.farmerService\n      .updateOrders(this.data._id, this.statusUpdateControl.value)\n      .pipe(first()) //pipe(first()) automatically unsubscribes from the observable after returning the first item\n      .subscribe(\n        (data: ApiResponse) => {\n          console.log(data);\n        },\n        (error) => {\n          console.log(error.error);\n        }\n      );\n  }\n}\n","<div class=\"orderDetailContainer\" style=\"width: 25vw;\">\n  <h1 mat-dialog-title>Update Order Status</h1>\n  <h3 mat-dialog-title>order no # {{ data._id }}</h3>\n\n  <mat-dialog-content>\n    <mat-list role=\"list\" *ngFor=\"let item of data.products.items\">\n      <mat-list-item role=\"listitem\"\n        >{{ item.name }}\n        <span style=\"padding-right: 40px;\">\n          <strong> ({{ item.quantity }})</strong></span\n        >\n      </mat-list-item>\n    </mat-list>\n    <hr />\n    <mat-list role=\"list\">\n      <mat-list-item role=\"listitem\"\n        >total quantity\n        <span style=\"padding-left: 40px;\">\n          <strong>{{ data.products.quantity }}</strong></span\n        >\n      </mat-list-item>\n\n      <mat-list-item role=\"listitem\"\n        >total price\n        <span style=\"padding-left: 40px;\">\n          <strong>{{ data.products.totalprice }}</strong></span\n        >\n      </mat-list-item>\n      <mat-list-item role=\"listitem\"\n        >order status\n        <span style=\"padding-left: 40px;\">\n          <strong>{{ data.status }}</strong></span\n        >\n      </mat-list-item>\n    </mat-list>\n    <hr />\n    <h4>Update order status</h4>\n\n    <mat-form-field appearance=\"fill\" style=\"width: 75%;\">\n      <mat-label>Order status</mat-label>\n      <mat-select [formControl]=\"statusUpdateControl\" required>\n        <mat-option *ngFor=\"let status of orderStatus\" [value]=\"status.value\">\n          {{ status.viewValue }}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"statusUpdateControl.hasError('required')\"\n        >Please choose a status</mat-error\n      >\n    </mat-form-field>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button [mat-dialog-close]=\"'close'\">Cancel</button>\n    <button\n      mat-button\n      [mat-dialog-close]=\"statusUpdateControl.value\"\n      (click)=\"updateOrderStatus()\"\n      [disabled]=\"!statusUpdateControl.valid\"\n    >\n      Update\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"order-list-container\">\n  <orders-table></orders-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products-list',\n  templateUrl: './products-list.component.html',\n  styleUrls: ['./products-list.component.css']\n})\nexport class ProductsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pro-list-container\">\n  <app-products-table></app-products-table>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { UserProfile } from \"src/app/common/_models/user\";\n\n@Component({\n  selector: \"app-sidenav\",\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.css\"],\n})\nexport class SidenavComponent implements OnInit {\n  @Input() profile: UserProfile;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"sidenav-container\">\n  <div class=\"sidenav-logo\">\n    <h1>Farmer Market</h1>\n  </div>\n\n  <div class=\"sidenav-user\">\n    <div>\n      <img\n        src=\"https://storage.googleapis.com/farmermarket/defaultprofile.png\"\n        alt=\"\"\n        srcset=\"\"\n        class=\"sidenav-user-img\"\n      />\n    </div>\n\n    <div class=\"sidenav-user-detail\">\n      <div class=\"sidenav-user-detail-name\">\n        {{ profile?.firstname }} {{ profile?.lastname }}\n      </div>\n      <div class=\"sidenav-user-detail-role\">farmer</div>\n    </div>\n  </div>\n\n  <mat-nav-list class=\"sidenav-menu-list\">\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\">\n      New Orders\n    </a>\n    <a mat-list-item [routerLink]=\"['/products']\" class=\"sidenav-menu-list-link\"\n      >Products</a\n    >\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\"\n      >Add Product</a\n    >\n    <a mat-list-item [routerLink]=\"['/orders']\" class=\"sidenav-menu-list-link\"\n      >Orders</a\n    >\n  </mat-nav-list>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"src/app/common/services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { UserProfile } from \"src/app/common/_models/user\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  userProfile: UserProfile;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.getMe().subscribe(\n      (res: any) => {\n        this.userProfile = res.data;\n      },\n      (error) => {\n        console.log(error.error);\n        this.userProfile = { firstname: \"\", lastname: \"\", picture: \"url\" };\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","<body>\n  <mat-drawer-container class=\"dashboard-container\">\n    <!-- sid nav -->\n    <mat-drawer\n      #drawer\n      mode=\"side\"\n      opened\n      class=\"dashboard-drawer\"\n      role=\"navigation\"\n    >\n      <mat-nav-list>\n        <app-sidenav [profile]=\"userProfile\"></app-sidenav>\n      </mat-nav-list>\n    </mat-drawer>\n    <!-- sid nav -->\n    <mat-drawer-content>\n      <!-- navbar -->\n      <div>\n        <mat-toolbar class=\"navbar\">\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Example icon-button with menu icon\"\n          >\n            <mat-icon (click)=\"drawer.toggle()\">menu</mat-icon>\n          </button>\n          <span>\n            <a mat-list-item [routerLink]=\"['/']\" class=\"menu-tab-list\">\n              Farmer Market\n            </a>\n          </span>\n          <span class=\"navbar-spacer\"></span>\n          <button\n            mat-icon-button\n            class=\"navbar-link mail_outline\"\n            aria-label=\"emails\"\n            matBadge=\"0\"\n            matBadgePosition=\"before\"\n          >\n            <mat-icon>mail_outline</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            class=\"navbar-link notifications_none\"\n            aria-label=\"orders notifications\"\n            matBadge=\"0\"\n            matBadgePosition=\"before\"\n            matBadgeColor=\"warn\"\n          >\n            <mat-icon>notifications_none</mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Account activity\"\n            [matMenuTriggerFor]=\"menu\"\n          >\n            <mat-icon mat-card-avatar class=\"navbar-user-image\"></mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogout()\">Logout</button>\n            <button mat-menu-item>\"\"</button>\n          </mat-menu>\n        </mat-toolbar>\n      </div>\n      <!-- navbar -->\n\n      <router-outlet></router-outlet>\n      <!-- router-outlet -->\n    </mat-drawer-content>\n  </mat-drawer-container>\n</body>\n","import { NgModule, Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from \"./components/dashboard.component\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { HomeDashboardComponent } from \"./components/UI/home-dashboard/home-dashboard.component\";\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\nimport { OrderTableComponent } from \"./components/UI/home-dashboard/orders/order-table.component\";\nimport { SidenavComponent } from \"./components/UI/sidenav/sidenav.component\";\nimport { ProductsTableComponent } from \"./components/UI/home-dashboard/product/product-table/products-table.component\";\nimport { AddProductDialogComponent } from \"./components/UI/home-dashboard/product/add-product-dialog/add-product-dialog.component\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { ProductsListComponent } from \"./components/UI/products/products-list.component\";\nimport { OrderListComponent } from \"./components/UI/orders/order-list.component\";\nimport { DetailComponent } from \"./components/UI/orders/order-detail/detail.component\";\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    HomeDashboardComponent,\n    OrderTableComponent,\n    SidenavComponent,\n    ProductsTableComponent,\n    AddProductDialogComponent,\n    ProductsListComponent,\n    OrderListComponent,\n    DetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: \"\",\n        component: DashboardComponent,\n        children: [\n          { path: \"\", component: HomeDashboardComponent },\n          { path: \"orders\", component: OrderListComponent },\n          { path: \"products\", component: ProductsListComponent },\n        ],\n      },\n    ]),\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports: [DashboardComponent, HomeDashboardComponent],\n})\nexport class FarmerdashboardModule {}\n"],"sourceRoot":"webpack:///"}