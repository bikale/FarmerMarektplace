{"version":3,"sources":["./src/app/common/services/super-user.service.ts","./src/app/modules/super-user/components/Transactions/transactions.component.ts","./src/app/modules/super-user/components/Transactions/transactions.component.html","./src/app/modules/super-user/components/logs/request-log.component.ts","./src/app/modules/super-user/components/logs/request-log.component.html","./src/app/modules/super-user/components/super-user-root/super-user-root.component.ts","./src/app/modules/super-user/components/super-user-root/super-user-root.component.html","./src/app/modules/super-user/components/users-list/user-edit-dialog/user-edit-dialog.component.ts","./src/app/modules/super-user/components/users-list/user-edit-dialog/user-edit-dialog.component.html","./src/app/modules/super-user/components/users-list/users-list.component.ts","./src/app/modules/super-user/components/users-list/users-list.component.html","./src/app/modules/super-user/sidenav/supersidenav.component.ts","./src/app/modules/super-user/sidenav/supersidenav.component.html","./src/app/modules/super-user/super-dashboard/super-dashboard.component.ts","./src/app/modules/super-user/super-dashboard/super-dashboard.component.html","./src/app/modules/super-user/super-user.module.ts"],"names":[],"mappings":"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","file":"modules-super-user-super-user-module-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SuperUserService {\n  private superUrl = \"http://localhost:8080/api/v1/farmermarket/super\";\n  constructor(private http: HttpClient) {}\n\n  getUserAccount() {\n    return this.http.get(`${this.superUrl}/users`);\n  }\n\n  changeUserStatus(id: string, status: boolean) {\n    return this.http.patch(`${this.superUrl}/users/${id}`, { status });\n  }\n\n  getRequestLogs() {\n    return this.http.get(`${this.superUrl}/logs`);\n  }\n  getOrderTransactions() {\n    return this.http.get(`${this.superUrl}/transactions`);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { UsersList } from \"../../../../common/_models/user\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { OrderTransactions } from \"src/app/common/_models/superUser\";\n@Component({\n  selector: \"app-transactions\",\n  templateUrl: \"./transactions.component.html\",\n  styleUrls: [\"./transactions.component.css\"],\n})\nexport class TransactionsComponent implements OnInit {\n  Transaction_LIST_DATA: OrderTransactions[];\n  dataSource = new MatTableDataSource<OrderTransactions>(\n    this.Transaction_LIST_DATA\n  );\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n\n  displayedColumns: string[] = [\n    \"order_number\",\n    \"quantity\",\n    \"totalprice\",\n    \"status\",\n    \"date\",\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.superService.getOrderTransactions().subscribe(\n      (res: ApiResponse) => {\n        this.Transaction_LIST_DATA = res.data;\n        this.dataSource = new MatTableDataSource<OrderTransactions>(\n          this.Transaction_LIST_DATA\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // console.log(this.USERS_LIST_DATA);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<div class=\"userlist-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. July 28\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- Order number Column -->\n    <ng-container matColumnDef=\"order_number\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Order #</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element._id }}</td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.quantity }}\n      </td>\n    </ng-container>\n\n    <!-- price Column -->\n    <ng-container matColumnDef=\"totalprice\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Totalprice</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.products.totalprice }}\n      </td>\n    </ng-container>\n\n    <!-- status Column -->\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.status }}</td>\n    </ng-container>\n    <!-- email Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date of order</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.orderedAt | date }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { RequestLogs } from \"src/app/common/_models/superUser\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatSort } from \"@angular/material/sort\";\n\n@Component({\n  selector: \"super-request-log\",\n  templateUrl: \"./request-log.component.html\",\n  styleUrls: [\"./request-log.component.css\"],\n})\nexport class RequestLogComponent implements OnInit {\n  REQUEST_LOG: RequestLogs[];\n  dataSource = new MatTableDataSource<RequestLogs>(this.REQUEST_LOG);\n  displayedColumns: string[] = [\n    \"url\",\n    \"method\",\n    \"response_time\",\n    \"request_date\",\n  ];\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit(): void {\n    this.superService.getRequestLogs().subscribe(\n      (res: ApiResponse) => {\n        this.REQUEST_LOG = res.data;\n        this.dataSource = new MatTableDataSource<RequestLogs>(this.REQUEST_LOG);\n\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<div class=\"log-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. GET\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- method Column -->\n    <ng-container matColumnDef=\"method\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Method</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.method }}</td>\n    </ng-container>\n\n    <!-- url Column -->\n    <ng-container matColumnDef=\"url\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Url</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.url }}</td>\n    </ng-container>\n\n    <!-- Response Time Column -->\n    <ng-container matColumnDef=\"response_time\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Response Time</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.response_time }}</td>\n    </ng-container>\n\n    <!-- Request Date Column -->\n    <ng-container matColumnDef=\"request_date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Request Date</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.request_date | date: \"medium\" }}\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20, 30, REQUEST_LOG?.length]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-super-user-root\",\n  templateUrl: \"./super-user-root.component.html\",\n  styleUrls: [\"./super-user-root.component.css\"],\n})\nexport class SuperUserRootComponent implements OnInit {\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  ngOnInit(): void {}\n\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          // bg_icon_name mat icon names    //classname css reference\n          {\n            title: \"Users\",\n            cols: 4,\n            rows: 3,\n          },\n          {\n            title: \"Transactions\",\n            cols: 4,\n            rows: 3,\n          },\n          {\n            title: \"Requests Log\",\n            cols: 4,\n            rows: 3,\n          },\n        ];\n      }\n\n      return [\n        {\n          title: \"Users\",\n          cols: 2,\n          rows: 3,\n        },\n        {\n          title: \"Transactions\",\n          cols: 2,\n          rows: 3,\n        },\n        {\n          title: \"Requests Log\",\n          cols: 4,\n          rows: 3,\n        },\n      ];\n    })\n  );\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"4\" rowHeight=\"175px\">\n    <mat-grid-tile\n      *ngFor=\"let card of cards | async\"\n      [colspan]=\"card.cols\"\n      [rowspan]=\"card.rows\"\n    >\n      <mat-card [ngClass]=\"['dashboard-card']\">\n        <mat-card-header>\n          <mat-card-title>\n            {{ card.title }}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <super-users-list *ngIf=\"card.title == 'Users'\"></super-users-list>\n          <app-transactions\n            *ngIf=\"card.title == 'Transactions'\"\n          ></app-transactions>\n          <super-request-log *ngIf=\"card.title == 'Requests Log'\">\n          </super-request-log>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\n\n@Component({\n  selector: \"app-user-edit-dialog\",\n  templateUrl: \"./user-edit-dialog.component.html\",\n  styleUrls: [\"./user-edit-dialog.component.css\"],\n})\nexport class UserEditDialogComponent implements OnInit {\n  changeStatusForm: FormGroup;\n\n  constructor(\n    formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private superService: SuperUserService\n  ) {\n    this.changeStatusForm = formBuilder.group({\n      userStatus: [this.data[\"active\"], Validators.required],\n    });\n  }\n  onChangeStatus() {\n    this.superService\n      .changeUserStatus(\n        this.data[\"_id\"],\n        this.changeStatusForm.value.userStatus\n      )\n      .subscribe(\n        (data) => {\n          console.log(data);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"edit-user-dialog-container\">\n  <h2 mat-dialog-title>Edit User Status</h2>\n  <mat-dialog-content class=\"mat-typography\">\n    <h3>User information</h3>\n\n    <form [formGroup]=\"changeStatusForm\" ngNativeValidate>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Full name </mat-label>\n          <input matInput disabled value=\"{{ data.firstname }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Email</mat-label>\n          <input matInput disabled value=\"{{ data.email }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Role</mat-label>\n          <input matInput disabled value=\"{{ data.role }}\" />\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-label>Status</mat-label>\n        <mat-slide-toggle formControlName=\"userStatus\"></mat-slide-toggle>\n      </p>\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button [mat-dialog-close]=\"'close'\">Cancel</button>\n    <button\n      mat-button\n      [mat-dialog-close]=\"this.changeStatusForm.get('userStatus').value\"\n      color=\"primary\"\n      (click)=\"onChangeStatus()\"\n      cdkFocusInitial\n    >\n      Update\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { SuperUserService } from \"src/app/common/services/super-user.service\";\nimport { UsersList } from \"../../../../common/_models/user\";\nimport { ApiResponse } from \"src/app/common/_models/products\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserEditDialogComponent } from \"./user-edit-dialog/user-edit-dialog.component\";\nimport { MatSort } from \"@angular/material/sort\";\n\n@Component({\n  selector: \"super-users-list\",\n  templateUrl: \"./users-list.component.html\",\n  styleUrls: [\"./users-list.component.css\"],\n})\nexport class UsersListComponent implements OnInit {\n  USERS_LIST_DATA: UsersList[];\n  dataSource = new MatTableDataSource<UsersList>(this.USERS_LIST_DATA);\n  constructor(\n    private superService: SuperUserService,\n    public dialog: MatDialog\n  ) {}\n\n  displayedColumns: string[] = [\n    \"firstname\",\n    \"lastname\",\n    \"email\",\n    \"role\",\n    \"status\",\n    \"changestatus\",\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit() {\n    this.superService.getUserAccount().subscribe(\n      (res: ApiResponse) => {\n        this.USERS_LIST_DATA = res.data;\n        this.dataSource = new MatTableDataSource<UsersList>(\n          this.USERS_LIST_DATA\n        );\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        // console.log(this.USERS_LIST_DATA);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  openUserEditDialog(userData) {\n    const dialogRef = this.dialog.open(UserEditDialogComponent, {\n      data: userData,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result != \"close\") {\n        this.USERS_LIST_DATA = this.USERS_LIST_DATA.map((item) => {\n          if (item[\"_id\"] == userData._id) {\n            return { ...item, active: result };\n          }\n          return item;\n        });\n\n        this.dataSource = new MatTableDataSource<UsersList>(\n          this.USERS_LIST_DATA\n        );\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n      }\n    });\n  }\n}\n","<div class=\"userlist-table-container\">\n  <mat-form-field class=\"filter-form\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. Abebe Bikila\"\n      #input\n    />\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <!-- Firstname Column -->\n    <ng-container matColumnDef=\"firstname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Firstname</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.firstname }}</td>\n    </ng-container>\n\n    <!-- lastname Column -->\n    <ng-container matColumnDef=\"lastname\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Lastname</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.lastname }}</td>\n    </ng-container>\n\n    <!-- email Column -->\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n\n    <!-- role Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.role }}</td>\n    </ng-container>\n    <!-- status Column -->\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.active ? \"active\" : \"deactive\" }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"changestatus\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <button\n          mat-mini-fab\n          color=\"warn\"\n          aria-label=\"Example icon button with a menu icon\"\n          (click)=\"openUserEditDialog(element)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n\n  <mat-paginator\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { UserProfile } from \"src/app/common/_models/user\";\n\n@Component({\n  selector: \"super-sidenav\",\n  templateUrl: \"./supersidenav.component.html\",\n  styleUrls: [\"./supersidenav.component.css\"],\n})\nexport class SuperSidenavComponent implements OnInit {\n  @Input() profile: UserProfile;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"sidenav-container\">\n  <div class=\"sidenav-logo\">\n    <h1>Farmer Market</h1>\n  </div>\n\n  <div class=\"sidenav-user\">\n    <div>\n      <img\n        src=\"https://cdn4.iconfinder.com/data/icons/flatfaces-everyday-people-circular/125/flatfaces8-512.png\"\n        alt=\"\"\n        srcset=\"\"\n        class=\"sidenav-user-img\"\n      />\n    </div>\n\n    <div class=\"sidenav-user-detail\">\n      <div class=\"sidenav-user-detail-name\">\n        {{ profile?.firstname }} {{ profile?.lastname }}\n      </div>\n      <div class=\"sidenav-user-detail-role\">Super user</div>\n    </div>\n  </div>\n\n  <mat-nav-list class=\"sidenav-menu-list\">\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\">\n      Users\n    </a>\n    <a mat-list-item [routerLink]=\"['/products']\" class=\"sidenav-menu-list-link\"\n      >Transactions</a\n    >\n    <a mat-list-item routerLink=\".\" class=\"sidenav-menu-list-link\">Logs</a>\n  </mat-nav-list>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UserProfile } from \"src/app/common/_models/user\";\nimport { AuthService } from \"src/app/common/services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-super-dashboard\",\n  templateUrl: \"./super-dashboard.component.html\",\n  styleUrls: [\"./super-dashboard.component.css\"],\n})\nexport class SuperDashboardComponent implements OnInit {\n  userProfile: UserProfile;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.getMe().subscribe(\n      (res: any) => {\n        this.userProfile = res.data;\n      },\n      (error) => {\n        console.log(error.error);\n        this.userProfile = { firstname: \"\", lastname: \"\", picture: \"url\" };\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","<body>\n  <mat-drawer-container class=\"dashboard-container\">\n    <!-- sid nav -->\n    <mat-drawer\n      #drawer\n      mode=\"side\"\n      opened\n      class=\"dashboard-drawer\"\n      role=\"navigation\"\n    >\n      <mat-nav-list>\n        <super-sidenav [profile]=\"userProfile\"></super-sidenav>\n      </mat-nav-list>\n    </mat-drawer>\n    <!-- sid nav -->\n    <mat-drawer-content>\n      <!-- navbar -->\n      <div>\n        <mat-toolbar class=\"navbar\">\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Example icon-button with menu icon\"\n          >\n            <mat-icon (click)=\"drawer.toggle()\">menu</mat-icon>\n          </button>\n          <span>\n            <a mat-list-item [routerLink]=\"['/']\" class=\"menu-tab-list\">\n              Farmer Market\n            </a>\n          </span>\n          <span class=\"navbar-spacer\"></span>\n          <button\n            mat-icon-button\n            class=\"navbar-link mail_outline\"\n            aria-label=\"emails\"\n            matBadge=\"3\"\n            matBadgePosition=\"before\"\n          >\n            <mat-icon>mail_outline</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            class=\"navbar-link notifications_none\"\n            aria-label=\"orders notifications\"\n            matBadge=\"8\"\n            matBadgePosition=\"before\"\n            matBadgeColor=\"warn\"\n          >\n            <mat-icon>notifications_none</mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            class=\"navbar-link\"\n            aria-label=\"Account activity\"\n            [matMenuTriggerFor]=\"menu\"\n          >\n            <mat-icon mat-card-avatar class=\"navbar-user-image\"></mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogout()\">Logout</button>\n            <button mat-menu-item>\"\"</button>\n          </mat-menu>\n        </mat-toolbar>\n      </div>\n      <!-- navbar -->\n\n      <router-outlet></router-outlet>\n      <!-- router-outlet -->\n    </mat-drawer-content>\n  </mat-drawer-container>\n</body>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { AngularMaterialModule } from \"../angular-material/angular-material.module\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\nimport { SuperSidenavComponent } from \"./sidenav/supersidenav.component\";\nimport { SuperDashboardComponent } from \"./super-dashboard/super-dashboard.component\";\nimport { SuperUserRootComponent } from \"./components/super-user-root/super-user-root.component\";\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserEditDialogComponent } from './components/users-list/user-edit-dialog/user-edit-dialog.component';\nimport { RequestLogComponent } from './components/logs/request-log.component';\nimport { TransactionsComponent } from './components/Transactions/transactions.component';\n\n@NgModule({\n  declarations: [\n    SuperDashboardComponent,\n    SuperSidenavComponent,\n    SuperUserRootComponent,\n    UsersListComponent,\n    UserEditDialogComponent,\n    RequestLogComponent,\n    TransactionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: \"\",\n        component: SuperDashboardComponent,\n        children: [{ path: \"\", component: SuperUserRootComponent }],\n      },\n    ]),\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports: [SuperDashboardComponent],\n})\nexport class SuperUserModule {}\n"],"sourceRoot":"webpack:///"}